class Line 
{
  float weight;
  float coord_x, coord_y;
  float heig = 1;

  Line(float weight, float x, float y) 
  {
    this.weight = weight;
    this.coord_y = y + heig/2;
    this.coord_x = x - weight/2;
    this.Drawing();
  }

  void Drawing() 
  {
    fill(0);
    rect(coord_x,coord_y,weight,heig);
  }
}

ArrayList<Line> line_array = new ArrayList<Line>();

void new_ellipse(float begin_x, float begin_y, float rad) 
{
  int start_t = millis();
 // float rad = 300;//random(200,350);
  line_array.add(new Line(rad * 2,begin_x, begin_y));
  float sin = 0, line_rad = 0;
  float step = rad / 18;
  for (float place_up = begin_x + step, place_down = begin_x - step;
    (place_down > begin_x - rad) &&(place_up < begin_x + rad)&& (sin <= 1);
    place_up += step, place_down -= step, sin += 0.1) 
  {
    line_rad = 2 * rad * cos(asin(sin));
    line_array.add(new Line(line_rad, begin_y,  place_up ));
    line_array.add(new Line(line_rad, begin_y, place_down));
  }
}

void setup() 
{
  size(1000,800);
  smooth();
  
}

void draw() {
  new_ellipse(300,300,150);
  new_rect(500,500,100);
  new_circle(150,150,100);
  new_triangle(800,600,300);
  new_trap(400,150,100);
}

void new_rect(float begin_x, float begin_y, float rad) {
  for (float place_y = begin_y; place_y > begin_y - rad; place_y -= rad/10) {
    line_array.add(new Line(rad,begin_x,place_y));
  }
}

void new_circle(float begin_x, float begin_y, float rad) 
{
  int start_t = millis();
 // float rad = 300;//random(200,350);
  line_array.add(new Line(rad,begin_x, begin_y));
  float sin = 0, line_rad = 0;
  float step = rad / 18;
  for (float place_up = begin_x + step, place_down = begin_x - step;
    (place_down > begin_x - rad) &&(place_up < begin_x + rad)&& (sin <= 1);
    place_up += step, place_down -= step, sin += 0.1) 
  {
    line_rad = rad * cos(asin(sin));
    line_array.add(new Line(line_rad, begin_y,  place_up ));
    line_array.add(new Line(line_rad, begin_y, place_down));
  }
}

void new_triangle(float begin_x, float begin_y, float head) 
{
  line_array.add(new Line(1,begin_x,begin_y));
  float step = head / 30; 
  float rad = 0;
  for (float h = step, place_y = begin_y; h < head; h += step, place_y -=step) {
    rad = h * 2 / sqrt(3.0);
    line_array.add(new Line(rad,begin_x,place_y));
  }
}

void new_trap(float begin_x, float begin_y, float head) 
{
  //line_array.add(new Line(1,begin_x,begin_y));
  float step = head / 30; 
  float rad = 0;
  for (float h = head / 2, place_y = begin_y; h < head; h += step, place_y +=step) {
    rad = h * 2 / sqrt(3.0);
    line_array.add(new Line(rad,begin_x,place_y));
  }
}







